{"id":"../node_modules/search-trie/lib/index.js","dependencies":[{"name":"/home/yuki-mogi/counter/package.json","includedInParent":true,"mtime":1555888523200},{"name":"/home/yuki-mogi/counter/node_modules/search-trie/package.json","includedInParent":true,"mtime":1555863699976},{"name":"/home/yuki-mogi/counter/node_modules/search-trie/.babelrc","includedInParent":true,"mtime":499162500000}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar empty = {};\n\nvar put = function put(node, string, edgeNodes, edgeDelimeter) {\n  var nextNode = void 0;\n  for (var position = 0; position < string.length; position++) {\n    var c = string[position];\n    nextNode = node[c];\n    if (!nextNode) {\n      nextNode = node[c] = Object.create(empty);\n      if (c === edgeDelimeter) {\n        edgeNodes.delete(node);\n      }\n    }\n    node = nextNode;\n  }\n  edgeNodes.set(node, string);\n  return nextNode;\n};\n\nvar get = function get(node, string) {\n  var nextNode = void 0;\n  for (var position = 0; position < string.length; position++) {\n    nextNode = node[string[position]];\n    if (!nextNode) {\n      return false;\n    }\n    node = nextNode;\n  }\n\n  return !!nextNode;\n};\n\nvar searchTrie = function searchTrie(words) {\n  var edgeDelimeter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';\n\n  var root = Object.create(empty);\n  var edgeNodes = new Map();\n\n  words.forEach(function (word) {\n    return put(root, word, edgeNodes, edgeDelimeter);\n  });\n\n  function contains(word) {\n    return get(root, word);\n  }\n\n  contains.put = function (word) {\n    return put(root, word, edgeNodes, edgeDelimeter);\n  };\n  contains.edges = edgeNodes;\n  return contains;\n};\n\nexports.default = searchTrie;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/search-trie/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/search-trie/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"../node_modules/search-trie/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar empty = {};\n\nvar put = function put(node, string, edgeNodes, edgeDelimeter) {\n  var nextNode = void 0;\n  for (var position = 0; position < string.length; position++) {\n    var c = string[position];\n    nextNode = node[c];\n    if (!nextNode) {\n      nextNode = node[c] = Object.create(empty);\n      if (c === edgeDelimeter) {\n        edgeNodes.delete(node);\n      }\n    }\n    node = nextNode;\n  }\n  edgeNodes.set(node, string);\n  return nextNode;\n};\n\nvar get = function get(node, string) {\n  var nextNode = void 0;\n  for (var position = 0; position < string.length; position++) {\n    nextNode = node[string[position]];\n    if (!nextNode) {\n      return false;\n    }\n    node = nextNode;\n  }\n\n  return !!nextNode;\n};\n\nvar searchTrie = function searchTrie(words) {\n  var edgeDelimeter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';\n\n  var root = Object.create(empty);\n  var edgeNodes = new Map();\n\n  words.forEach(function (word) {\n    return put(root, word, edgeNodes, edgeDelimeter);\n  });\n\n  function contains(word) {\n    return get(root, word);\n  }\n\n  contains.put = function (word) {\n    return put(root, word, edgeNodes, edgeDelimeter);\n  };\n  contains.edges = edgeNodes;\n  return contains;\n};\n\nexports.default = searchTrie;"},"lineCount":59}},"error":null,"hash":"235f275a50a42ba621f08c72a7b2ae81","cacheData":{"env":{}}}