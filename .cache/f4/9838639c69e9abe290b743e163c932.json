{"id":"../node_modules/proxyequal/lib/weakMemoize.js","dependencies":[{"name":"/home/yuki-mogi/counter/package.json","includedInParent":true,"mtime":1555888523200},{"name":"/home/yuki-mogi/counter/node_modules/proxyequal/package.json","includedInParent":true,"mtime":1555863699968},{"name":"/home/yuki-mogi/counter/node_modules/proxyequal/.babelrc","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar weakMemoizeArray = exports.weakMemoizeArray = function weakMemoizeArray(fn) {\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      var old = cache.get(arg);\n      if (old.length === arg.length) {\n        return old.value;\n      }\n    }\n    var ret = fn(arg);\n    cache.set(arg, {\n      value: ret,\n      length: arg.length\n    });\n    return ret;\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/proxyequal/lib/weakMemoize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/proxyequal/lib/weakMemoize.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar weakMemoizeArray = exports.weakMemoizeArray = function weakMemoizeArray(fn) {\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      var old = cache.get(arg);\n      if (old.length === arg.length) {\n        return old.value;\n      }\n    }\n    var ret = fn(arg);\n    cache.set(arg, {\n      value: ret,\n      length: arg.length\n    });\n    return ret;\n  };\n};"},"lineCount":22}},"error":null,"hash":"d1f9403b010ae40594955444d4ac5c55","cacheData":{"env":{}}}